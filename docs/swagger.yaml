basePath: /
definitions:
  request.DeleteItem:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.NewItem:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  request.SendItem:
    properties:
      item_id:
        type: integer
      user_login:
        type: string
    required:
    - item_id
    - user_login
    type: object
  request.SignIn:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  request.SignUp:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  response.CreatedItem:
    properties:
      item:
        $ref: '#/definitions/response.Item'
      message:
        type: string
    required:
    - item
    - message
    type: object
  response.Error:
    properties:
      error:
        type: string
    required:
    - error
    type: object
  response.Item:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  response.Message:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  response.TempLink:
    properties:
      link:
        type: string
    required:
    - link
    type: object
  response.Token:
    properties:
      access_token:
        type: string
    required:
    - access_token
    type: object
host: localhost:8080
info:
  contact: {}
  description: API server for test application
  title: Todo App API
  version: "1.0"
paths:
  /api/v1/get:
    get:
      consumes:
      - application/json
      description: Confirm send item
      operationId: confirm
      parameters:
      - description: link
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.SendItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - ApiKeyAuth: []
      summary: get
      tags:
      - items
  /api/v1/items:
    get:
      consumes:
      - application/json
      description: Get items fo current user
      operationId: getItems
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.Item'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - ApiKeyAuth: []
      summary: get
      tags:
      - items
  /api/v1/items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete item by Id
      operationId: deleteItem
      parameters:
      - description: Item Id
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.DeleteItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - ApiKeyAuth: []
      summary: delete
      tags:
      - items
  /api/v1/items/new:
    post:
      consumes:
      - application/json
      description: Create new item for current user
      operationId: createItem
      parameters:
      - description: New item data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.NewItem'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.CreatedItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - ApiKeyAuth: []
      summary: create
      tags:
      - items
  /api/v1/send:
    post:
      consumes:
      - application/json
      description: Send item
      operationId: sendItem
      parameters:
      - description: Item data for send
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.SendItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TempLink'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      security:
      - ApiKeyAuth: []
      summary: send
      tags:
      - items
  /auth/v1/login:
    post:
      consumes:
      - application/json
      description: Log in with an existing account
      operationId: sign-in
      parameters:
      - description: login and password from the account
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.SignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      summary: sign-in
      tags:
      - auth
  /auth/v1/registration:
    post:
      consumes:
      - application/json
      description: Create new account
      operationId: sign-up
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.SignUp'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Error'
      summary: sign-up
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
